sudo: true

language: c

compiler:
  - gcc

addons:
  apt:
    packages:
      - gfortran
      - gcc
      - g++
      - openmpi-bin
      - libopenmpi-dev
      - cmake
      - automake
      - autoconf
      - libblas-dev
      - liblapack-dev
      - diffutils
      - findutils
      - libeigen3-dev

services:
  - docker

stages:
  # order stages
  - name: precise
  - name: trusty
  - name: xenial
  - name: coverage
  - name: interface64

jobs:
  include:
  # precise <=> test "older" systems, without ICB, without cmake (too old to be supported)
  - stage: precise
    dist: precise
    script: ./bootstrap && ./configure                                                  && make VERBOSE=1 && make check && make distcheck;
  - stage: precise
    dist: precise
    script: ./bootstrap && ./configure --enable-mpi                                     && make VERBOSE=1 && make check && make distcheck;
  # trusty <=> test "older" systems, without ICB
  - stage: trusty
    dist: trusty
    script: mkdir -p build && cd build && cmake -D EXAMPLES=ON -D MPI=OFF -D ICB=OFF .. && make VERBOSE=1 && make test  && make package_source;
  - stage: trusty
    dist: trusty
    script: mkdir -p build && cd build && cmake -D EXAMPLES=ON -D MPI=ON  -D ICB=OFF .. && make VERBOSE=1 && make test  && make package_source;
  - stage: trusty
    dist: trusty
    script: ./bootstrap && ./configure                                                  && make VERBOSE=1 && make check && make distcheck;
  - stage: trusty
    dist: trusty
    script: ./bootstrap && ./configure --enable-mpi                                     && make VERBOSE=1 && make check && make distcheck;
  # xenial <=> test "recent" systems, with and without ICB
  - stage: xenial
    dist: xenial
    script: mkdir -p build && cd build && cmake -D EXAMPLES=ON -D MPI=OFF -D ICB=OFF .. && make VERBOSE=1 && make test  && make package_source;
  - stage: xenial
    dist: xenial
    script: mkdir -p build && cd build && cmake -D EXAMPLES=ON -D MPI=ON  -D ICB=OFF .. && make VERBOSE=1 && make test  && make package_source;
  - stage: xenial
    dist: xenial
    script: mkdir -p build && cd build && cmake -D EXAMPLES=ON -D MPI=OFF -D ICB=ON  .. && make VERBOSE=1 && make test  && make package_source;
  - stage: xenial
    dist: xenial
    script: mkdir -p build && cd build && cmake -DEXAMPLES=ON -DMPI=OFF -DICBEXMM=ON .. && make VERBOSE=1 && make test  && make package_source;
  - stage: xenial
    dist: xenial
    script: mkdir -p build && cd build && cmake -D EXAMPLES=ON -D MPI=ON  -D ICB=ON  .. && make VERBOSE=1 && make test  && make package_source;
  - stage: xenial
    dist: xenial
    script: ./bootstrap && ./configure                                                  && make VERBOSE=1 && make check && make distcheck;
  - stage: xenial
    dist: xenial
    script: ./bootstrap && ./configure --enable-mpi                                     && make VERBOSE=1 && make check && make distcheck;
  - stage: xenial
    dist: xenial
    script: ./bootstrap && ./configure              --enable-icb                        && make VERBOSE=1 && make check && make distcheck;
  - stage: xenial
    dist: xenial
    script: ./bootstrap && ./configure              --enable-icb-exmm                   && make VERBOSE=1 && make check && make distcheck;
  - stage: xenial
    dist: xenial
    script: ./bootstrap && ./configure --enable-mpi --enable-icb                        && make VERBOSE=1 && make check && make distcheck;
  # xenial <=> coverage: "recent" systems with ICB
  - stage: coverage
    dist: xenial
    script: |
      mkdir -p build && cd build                                                   \
      &&                                                                           \
      cmake -DEXAMPLES=ON -DMPI=ON -DICBEXMM=ON -DCOVERALLS=ON .. &> cmake.log     \
      &&                                                                           \
      tail -n 50 cmake.log                                                         \
      &&                                                                           \
      make all                                                    &> compil.log    \
      &&                                                                           \
      tail -n 50 compil.log                                                        \
      &&                                                                           \
      make test                                                   &> test.log      \
      &&                                                                           \
      tail -n 50 test.log                                                          \
      &&                                                                           \
      make coveralls                                              &> coveralls.log \
      &&                                                                           \
      head -n 50 coveralls.log && tail -n 50 coveralls.log                         \
      &&                                                                           \
      head -n 50 coveralls.json && tail -n 50 coveralls.json

  # xenial <=> interface64: "recent" systems with ICB + MKL + ILP64 (need debian/testing to get MKL-ILP64)
  - stage: interface64
    allow_failure:
    dist: xenial
    script: |
      sudo docker pull debian                                                                                           \
      &&                                                                                                                \
      sudo docker run debian /bin/bash -c                                                                               \
      "cat /etc/os-release                                                                                           && \
       more /etc/apt/sources.list                                                                                    && \
       sed -e 's/stretch/testing/'            -i /etc/apt/sources.list                                               && \
       sed -e 's/main/main non-free contrib/' -i /etc/apt/sources.list                                               && \
       more /etc/apt/sources.list                                                                                    && \
       export DEBIAN_FRONTEND=noninteractive                                                                         && \
       apt-get -y                                                                 update                             && \
       apt-get -y --allow-unauthenticated -o Dpkg::Options::=--force-confdef      upgrade                            && \
       apt-get -y --allow-unauthenticated -o Dpkg::Options::=--force-confdef dist-upgrade                            && \
       cat /etc/os-release                                                                                           && \
       apt-get -y install dialog apt-utils                                                                           && \
       echo yes | apt-get -y install intel-mkl libmkl-dev                                                            && \
       apt-get -y install build-essential                                                                            && \
       apt-get -y install git gfortran gcc g++ openmpi-bin libopenmpi-dev automake autoconf libeigen3-dev            && \
       cd /tmp                                                                                                       && \
       git clone https://github.com/opencollab/arpack-ng                                                             && \
       cd arpack-ng                                                                                                  && \
       git checkout master                                                                                           && \
       sed -e 's/LOG_FLAGS = /LOG_FLAGS = --allow-run-as-root --oversubscribe /' -i PARPACK/EXAMPLES/MPI/Makefile.am && \
       sed -e 's/LOG_FLAGS = /LOG_FLAGS = --allow-run-as-root --oversubscribe /' -i PARPACK/TESTS/MPI/Makefile.am    && \
       ./bootstrap                                                                                                   && \
       export FFLAGS='-I/usr/include/mkl'                                                                            && \
       export FCFLAGS='-I/usr/include/mkl'                                                                           && \
       export LIBS='-Wl,--no-as-needed -lmkl_sequential -lmkl_core -lpthread -lm -ldl'                               && \
       export INTERFACE64=1                                                                                          && \
       ./configure --with-blas=mkl_gf_ilp64 --with-lapack=mkl_gf_ilp64 -enable-icb-exmm --enable-mpi                    \
                   --disable-dependency-tracking                                                                     && \
       export VERBOSE=1                                                                                              && \
       make all                                                                                                      && \
       make check                                                                                                    && \
       find . -name   test-suite.log | xargs tail -n 300                                                             && \
       find . -name arpackmm.run.log | xargs tail -n 300"

after_failure:

  # show build error or test log to know what is wrong if errors occured.
  - if [[ -f $TRAVIS_BUILD_DIR/build/Testing/Temporary/LastTest.log ]]; then tail -n 300 $TRAVIS_BUILD_DIR/build/Testing/Temporary/LastTest.log; fi
  - find . -name test-suite.log | xargs tail -n 300
  - find . -name arpackmm.run.log | xargs tail -n 300
